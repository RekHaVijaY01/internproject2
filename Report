
    Project No 2: Relationship Form Creation                                               

1. Introduction
         This project involves the creation of a user-friendly form to establish new business relationships using HTML, CSS, and JavaScript.
     The form allows users to input and validate various details, such as customer name, contact information, company details, and more.
     The form also features interactive elements like dropdowns, text fields, and checkboxes, with validation to ensure the accuracy of the information entered.

2. Technologies Use
     HTML (HyperText Markup Language): Used for creating the structure of the form, organizing elements such as input fields, labels, and buttons.
     CSS (Cascading Style Sheets): Used for styling the form, making it visually appealing and responsive.
     JavaScript: Used for form validation, ensuring that required fields are completed correctly and providing immediate feedback to the user.

3. HTML Structure
       The HTML document begins with the <!DOCTYPE html> declaration, indicating that it is an HTML5 document. The structure of the form is organized
   into several sections:

   Header Section: The header contains a title and a heading (<h1>) that introduces the purpose of the form.
   Form Section: The form itself (<form>) is divided into multiple parts, each corresponding to different pieces of information, such as:
   Country selection
   Customer name and contact person
   Designation, primary email, and phone numbers
   Company type and address
   Additional details like technology, Skype ID, web URL, services, and more.
   Button Section: The form ends with a submission button that, when clicked, triggers a JavaScript function to validate the input.

4. CSS Styling
      CSS is used extensively to style the form, making it more user-friendly and aesthetically pleasing. Key features of the CSS include:

       Layout: The form is styled to have a clean and organized layout with proper spacing between elements, using padding and margin.
       Flexbox: Flexbox is used to create flexible and responsive layouts, particularly for sections that contain multiple input fields side by side.
       Responsive Design: Media queries are used to adjust the layout and font sizes based on the screen size, ensuring the form is accessible on both
                          desktop and mobile devices.
       Error Styling: Input fields that fail validation are highlighted with a red border, and error messages are displayed to guide the user.

5. JavaScript Validation
      JavaScript plays a crucial role in validating the form inputs. The validation script ensures:

       Required Fields: Fields marked as required (e.g., customer name, email, mobile number) must be filled in before submission.
       Email Format: The email field is checked for a valid format, ensuring it contains both an @ symbol and a domain.
       Mobile Number: The mobile number must be exactly 10 digits long.
       Checkbox Validation: The "follow-up" checkbox must be checked to proceed.
       If any validation fails, the corresponding input field is highlighted, and an error message is displayed. If all validations pass,
       the form is "submitted," and the user's information is displayed on the page.

6. User Experience
    The form is designed with user experience in mind:

    Immediate Feedback: Users receive instant feedback if they attempt to submit the form with missing or incorrect information.
    Responsive Design: The form adjusts seamlessly to different screen sizes, making it accessible on a wide range of devices.
    Clear Instructions: Labels and error messages provide clear instructions, helping users understand what is required.

7. Conclusion
       This project demonstrates the effective use of HTML, CSS, and JavaScript to create an interactive, responsive, and user-friendly form 
   for creating new business relationships. The formâ€™s validation ensures that all necessary information is provided and correctly formatted,
   enhancing data accuracy and user satisfaction.
